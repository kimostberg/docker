# Docker Compose file for a Baikal server with local mounts instead of Docker volumes

# Before you start docker-compose up, make sure that you have prepared
# the local folders to avoid file permission issues with
#
# mkdir -p config Specific/db
# chown -R 101:101 config Specific  <- Use this for Nginx
# chown -R 33:33 config Specific    <- Use this for Apache httpd

#version: "2"

name: ${CONTAINER_NAME}

networks:
  frontend:
    external: true # add this if the network is already existing!

services:
  baikal:
  #  image: ckulka/baikal.nginx:build
    build:
      context: ./git
      dockerfile: nginx.dockerfile
    container_name: ${CONTAINER_NAME}
    restart: unless-stopped
    #ports:
    #  - "8880:80"
    volumes:
      - ./config:/var/www/baikal/config
      - ./Specific:/var/www/baikal/Specific
    networks:
      - frontend

    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${CONTAINER_NAME}.entrypoints=http"
      - "traefik.http.routers.${CONTAINER_NAME}.rule=Host(`${CONTAINER_NAME}.${DOMAIN}`)"
      - "traefik.http.middlewares.${CONTAINER_NAME}-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.${CONTAINER_NAME}.middlewares=${CONTAINER_NAME}-https-redirect"
      - "traefik.http.routers.${CONTAINER_NAME}-secure.entrypoints=https"
      - "traefik.http.routers.${CONTAINER_NAME}-secure.rule=Host(`${CONTAINER_NAME}.${DOMAIN}`)"
      - "traefik.http.routers.${CONTAINER_NAME}-secure.tls=true"
      - "traefik.http.routers.${CONTAINER_NAME}-secure.service=${CONTAINER_NAME}"
      - "traefik.http.services.${CONTAINER_NAME}.loadbalancer.server.port=80"
      - "traefik.docker.network=frontend"
