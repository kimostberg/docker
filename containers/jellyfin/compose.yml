name: ${CONTAINER_NAME}
services:
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: ${CONTAINER_NAME}
    hostname: ${CONTAINER_NAME}
    environment:
      - PUID=1000
      - PGID=994
      - JELLYFIN_PublishedServerUrl=https://${CONTAINER_NAME}.${DOMAIN} #optional
    ports:
    #  - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config:/config
      - ./cache:/cache
      - ${MEDIA_LOCATION}:/media
    networks:
      - frontend
    env_file:
      - .env
    labels:
      - "traefik.enable=${TRAEFIK_ENABLE}"
      - "traefik.http.routers.${CONTAINER_NAME}.entrypoints=http"
      - "traefik.http.routers.${CONTAINER_NAME}.rule=Host(`${CONTAINER_NAME}.${DOMAIN}`)"
      - "traefik.http.middlewares.${CONTAINER_NAME}-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.${CONTAINER_NAME}.middlewares=${CONTAINER_NAME}-https-redirect"
      - "traefik.http.routers.${CONTAINER_NAME}-secure.entrypoints=https"
      - "traefik.http.routers.${CONTAINER_NAME}-secure.rule=Host(`${CONTAINER_NAME}.${DOMAIN}`)"
      - "traefik.http.routers.${CONTAINER_NAME}-secure.tls=true"
      - "traefik.http.routers.${CONTAINER_NAME}-secure.service=${CONTAINER_NAME}"
      - "traefik.http.services.${CONTAINER_NAME}.loadbalancer.server.port=8096"
      - "traefik.docker.network=frontend"

networks:
  frontend: 
    external: true # add this if the network is already existing!